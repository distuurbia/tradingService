// Code generated by mockery v2.30.1. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// BalanceRepository is an autogenerated mock type for the BalanceRepository type
type BalanceRepository struct {
	mock.Mock
}

// MoneyBackWithPnl provides a mock function with given fields: ctx, profileID, pnl
func (_m *BalanceRepository) MoneyBackWithPnl(ctx context.Context, profileID string, pnl float64) error {
	ret := _m.Called(ctx, profileID, pnl)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, float64) error); ok {
		r0 = rf(ctx, profileID, pnl)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WithdrawOnPosition provides a mock function with given fields: ctx, profileID, amount
func (_m *BalanceRepository) WithdrawOnPosition(ctx context.Context, profileID string, amount float64) error {
	ret := _m.Called(ctx, profileID, amount)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, float64) error); ok {
		r0 = rf(ctx, profileID, amount)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewBalanceRepository creates a new instance of BalanceRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewBalanceRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *BalanceRepository {
	mock := &BalanceRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
